node {
    stage('Checkout'){
        checkout scm
    }
    dir("${env.WORKSPACE}\\api.v2"){
        stage('SonarQube'){

            withEnv(["scannerHome=${tool 'SonarQubeScanner'}"]) {
                    
                withSonarQubeEnv('sonarqube') {
                    //bat "${scannerHome}\\bin\\sonar-scanner.bat"
                    bat "mvn clean package sonar:sonar"
                }
                timeout(time: 10, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
                
            }
        }
    }
try {
    stage('Offline'){
        powershell 'stop-service -name iGrocery.Api'
    }

    stage('Build api.v2') {
        bat 'mvn -f api.v2/pom.xml clean install -X' 
    }

    stage('Test') {
        echo "Here is testing."
    }
}
catch(e) {
    powershell 'start-service -name iGrocery.Api'
    throw e
}

finally {

}
    stage('Deploy') {
        powershell "robocopy \"${env.WORKSPACE}\\api.v2\\target\" \"D:\\!websites\\igrocery.v2.api\" /MIR; Exit 0"
        powershell "robocopy \"${env.WORKSPACE}\\devops\" \"D:\\!websites\" hosting.igrocery.api.bat; Exit 0"
    }

    stage('Online'){
        powershell 'start-service -name iGrocery.Api'
    }
}
