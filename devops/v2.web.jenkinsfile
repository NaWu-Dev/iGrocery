node {

    stage('Checkout'){
        checkout scm
    }
    dir("${env.WORKSPACE}\\web.v2"){
        stage('SonarQube'){
            withEnv(["scannerHome=${tool 'SonarQubeScanner'}"]) {
                withSonarQubeEnv('sonarqube') {
                    bat "${scannerHome}\\bin\\sonar-scanner.bat -Dsonar.projectKey=igrocery-web"
                }
                timeout(time: 10, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
                
            }
        }
    }    
    //set workspace folder to subfolder
    dir("${env.WORKSPACE}\\web.v2"){
        stage('Setup NPM') {
            bat "npm install" 
        }

        stage('Build web.v2') {
            bat "npm run build" 
        }
    }

    stage('Test') {
        powershell "Write-Host \"Here is testing, ${env.WORKSPACE}\" "
    }

    stage('Deploy') {
        powershell "stop-service -name iGrocery.Web"
        powershell "robocopy \"${env.WORKSPACE}\\web.v2\\build\" \"D:\\!websites\\igrocery.v2.web\" /MIR /E /PURGE; Exit 0 "
        powershell "robocopy \"${env.WORKSPACE}\\devops\" \"D:\\!websites\" hosting.igrocery.web.bat; Exit 0"
        powershell "start-service -name iGrocery.Web"
    }

}
